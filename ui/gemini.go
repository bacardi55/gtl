package ui

import (
	"fmt"
	"strconv"
	"strings"
	"time"

	"git.bacardi55.io/bacardi55/gtl/core"
)

func displayStreamGemini(data *core.TlData, limit int) error {
	e := data.RefreshFeeds()
	if e != nil {
		return fmt.Errorf("Couldn't refresh feeds")
	}

	stream := data.Stream

	var max int
	max = len(stream.Items) - 1
	if limit > 0 && limit < max {
		max = limit
	}

	output := "# Tinylog timeline generated by gtl\n"
	output += "author: @gtl\n"
	output += "last refresh: " + time.Now().Format(data.Config.Date_format)
	output += "\n=> https://codeberg.org/bacardi55/gemini-tinylog-rfc Tinylog RFC"
	output += "\ncurrently agregating " + strconv.Itoa(len(data.Feeds)) + " tinylogs (Urls at the bottom of the page)\n\n"

	for i := 0; i < max; i++ {
		output += "## "
		output += stream.Items[i].Published.Format(data.Config.Date_format)
		output += "\n### author: "
		output += stream.Items[i].Author
		output += "\n" + stream.Items[i].Content + "\n\n"
	}

	var authors []string
	for _, f := range data.Feeds {
		authors = append(authors, "=> "+f.Link+" "+f.DisplayName)
	}
	output += "Agregated tinylogs: \n" + strings.Join(authors, "\n")

	output += "\n\n=> https://github.com/bacardi55/gtl gtl"

	fmt.Println(output)
	return nil
}
